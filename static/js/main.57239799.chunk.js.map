{"version":3,"sources":["reportWebVitals.js","contexts/CurrentUserContext.js","components/Navigation/Navigation.js","utils/MainApi.js","components/Header/Header.js","images/footer__nav-icon_facebook.svg","images/footer__nav-icon_github.svg","components/Footer/Footer.js","utils/NewsApi.js","components/SearchForm/SearchForm.js","components/About/About.js","components/NewsCard/NewsCard.js","components/NothingFound/NothingFound.js","components/NewsCardList/NewsCardList.js","components/Preloader/Preloader.js","components/Main/Main.js","components/SavedNewsHeader/SavedNewsHeader.js","components/SavedNews/SavedNews.js","components/PopupWithForm/PopupWithForm.js","components/Popup/Popup.js","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CurrentUserContext","React","createContext","Navigation","props","className","isNavOpen","to","exact","activeClassName","navigationLinkColors","isLoggedIn","api","url","headers","credentialPreference","this","_url","_headers","_credential","res","ok","json","Promise","reject","status","email","password","name","fetch","method","credentials","body","JSON","stringify","_checkResponse","article","articleId","Header","useState","toggleNav","currentUser","useContext","activeClass","isSavedNewsRoute","onClick","isFormPopupOpen","togglePopup","toggleFormPopup","isPopupOpen","signout","toggleLoggedIn","localStorage","removeItem","catch","err","console","log","toggleIsRegisterPopup","Footer","href","target","rel","alt","src","github","facebook","newsApiEndpoints","endpoint","auth","Authorization","pageSize","newsApi","_endpoint","_auth","_pageSize","keyword","Date","now","SearchForm","searchRef","useRef","searchAndSort","savedCards","search","current","value","newArticles","urlArray","length","articles","forEach","push","Error","card","includes","isSaved","setVisibleCards","setCards","toggleIsLoading","newsSearch","e","preventDefault","getItem","parse","getArticles","onSubmit","ref","onKeyUp","key","type","placeholder","About","NewsCard","toggleIsSaved","handleDelete","deleteCard","_id","useEffect","stopPropagation","saveArticle","title","text","description","date","source","link","image","s","charAt","toUpperCase","slice","keywords","style","backgroundImage","substr","split","NothingFound","error","NewsCardList","hideButton","toggleButton","cards","visibleCards","map","publishedAt","urlToImage","newVisibleCards","Preloader","Main","isLoading","addArticle","renderCardList","SavedNewsHeader","sortedKeywords","capitalize","SavedNews","setSavedCards","setSortedKeywords","id","deleteArticle","retrieveCards","returnKeywordRankings","arr","lowercase","toLowerCase","result","i","keywordsCopy","sortedResult","Object","keys","reducedObj","reduce","a","b","useCallback","keywordRankArray","newCards","newCard","refArray","objectToSort","itemPositions","entries","index","sort","sortCardsByKeyword","sortedCards","setItem","PopupWithForm","errors","setErrors","signinFailed","toggleSigninFailed","badRequest","toggleBadRequest","emailRef","passwordRef","nameRef","handleRegisterSubmit","register","toggleRegisterSuccess","toggleRegisterSuccessPopup","handleSigninSubmit","signin","getUserInfo","setCurrentUser","validateInputs","username","validator","isEmail","isStrongPassword","minSymbols","signinFormOnChange","validatedInputs","toggleRegisterPopup","isRegisterPopup","onChange","registerFormOnChange","htmlFor","required","Popup","children","ProtectedRoute","Component","component","App","isRegisterSuccessPopupOpen","isRegisterSuccess","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57239799.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => {\r\n\r\n  function renderSavedArticlesLink() {\r\n    if (props.isLoggedIn) {\r\n      return (\r\n        <NavLink to='/saved-news' exact={true} activeClassName=\"navbar__link_active_dark\" className={`navbar__link ${props.navigationLinkColors('navbar__link_dark')}`}>Saved articles</NavLink>\r\n      )\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`navbar ${props.isNavOpen ? 'navbar_active' : ''}`}>\r\n      <NavLink to='/' exact={true} activeClassName=\"navbar__link_active\" className={`navbar__link ${props.navigationLinkColors('navbar__link_dark')}`}>Home</NavLink>\r\n      {renderSavedArticlesLink()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","const main = {\n  url: 'http://api.danny-news-explorer.students.nomoreparties.site',\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  credentialPreference: 'include',\n}\n\nclass Api {\n  constructor({ url, headers, credentialPreference }) {\n    this._url = url;\n    this._headers = headers;\n    this._credential = credentialPreference;\n  }\n\n  // Private functions\n\n  _checkResponse(res) {\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  }\n\n  // User and registration\n\n  register(email, password, name) {\n    return fetch(`${this._url}/signup`, {\n      method: \"POST\",\n      credentials: this._credential,\n      headers: this._headers,\n      body: JSON.stringify({ email, password, name })\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n  signin(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: \"POST\",\n      credentials: this._credential,\n      headers: this._headers,\n      body: JSON.stringify({ email, password })\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n  signout() {\n    return fetch(`${this._url}/users/logout`, {\n      credentials: this._credential,\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      credentials: this._credential,\n      headers: this._headers,\n    })\n      .then((res => {\n        return this._checkResponse(res);\n      }));\n  }\n\n  // Article CRUD\n\n  getArticles() {\n    return fetch(`${this._url}/articles`, {\n      credentials: this._credential,\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n  addArticle(article) {\n    return fetch(`${this._url}/articles`, {\n      credentials: this._credential,\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(article),\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n  deleteArticle(articleId) {\n    return fetch(`${this._url}/articles/${articleId}`, {\n      credentials: this._credential,\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._checkResponse(res);\n      })\n  }\n\n}\n\nconst api = new Api(main);\n\nexport default api;","import React, { useContext, useState } from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport Navigation from '../Navigation/Navigation';\n\nimport api from '../../utils/MainApi';\n\nconst Header = (props) => {\n\n  const [isNavOpen, toggleNav] = useState(false);\n\n  const currentUser = useContext(CurrentUserContext);\n\n  function togglePopup() {\n    props.togglePopup(true);\n    props.toggleFormPopup(true);\n    props.toggleIsRegisterPopup(false);\n    toggleNav(false);\n  }\n\n  function handleSignout() {\n\n    api.signout()\n      .then(() => {\n        props.toggleLoggedIn(false);\n        toggleNav(false);\n        localStorage.removeItem('articles');\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n\n  }\n\n  function toggleNavStatus() {\n    if (props.isFormPopupOpen) {\n      toggleNav(false);\n      props.togglePopup(false);\n      props.toggleFormPopup(false);\n    } else {\n      toggleNav(!isNavOpen);\n    }\n  }\n\n  function navigationLinkColors(activeClass) {\n    if (props.isSavedNewsRoute && !isNavOpen) {\n      return activeClass;\n    } else if (props.isSavedNewsRoute && isNavOpen) {\n      return '';\n    } else {\n      return '';\n    }\n  }\n  return (\n    <header className={`header ${isNavOpen ? 'header_nav-active' : ''}`}>\n      <div className='header__size'>\n        <p className={`header__logo ${navigationLinkColors('header__logo_dark')} `}>NewsExplorer</p>\n\n        <button onClick={toggleNavStatus} className={`header__icon ${isNavOpen ? 'header__icon_active' : ''} ${props.isFormPopupOpen || props.isPopupOpen ? 'header__icon_active' : ''} ${navigationLinkColors('header__icon_dark')}`}></button>\n        <div className={`header__mobile-nav ${isNavOpen ? 'header__mobile-nav_visible' : ''}`}>\n          <Navigation\n            isLoggedIn={props.isLoggedIn}\n            isSavedNewsRoute={props.isSavedNewsRoute}\n            isNavOpen={isNavOpen}\n            navigationLinkColors={navigationLinkColors}\n          />\n\n          {props.isLoggedIn\n            ? <button\n              onClick={handleSignout}\n              className={`header__signout ${navigationLinkColors('header__signout_dark')}`}>{`${isNavOpen ? 'Sign out' : currentUser.name}`}</button>\n            : <button\n              onClick={togglePopup}\n              className={`header__signin ${navigationLinkColors('header__signin_dark')}`}>Sign in</button>}\n        </div>\n\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/footer__nav-icon_facebook.ce8865e2.svg\";","export default __webpack_public_path__ + \"static/media/footer__nav-icon_github.94b724e8.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport facebook from '../../images/footer__nav-icon_facebook.svg';\r\nimport github from '../../images/footer__nav-icon_github.svg';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__width\">\r\n        <p className=\"footer__copyright\">&copy; Danny Demosi, Powered by News API</p>\r\n        <nav className=\"footer__navbar\">\r\n          <div className=\"footer__navlink-container\">\r\n            <Link to='/' className=\"footer__navlink\">Home</Link>\r\n            <a href=\"https://practicum.yandex.com/\" className=\"footer__navlink\">Practicum by Yandex</a>\r\n          </div>\r\n          <div className=\"footer__nav-icon-container\">\r\n            <a href=\"https://github.com/ddemosi/news-explorer-frontend\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__nav-icon footer__nav-icon_github\"><img alt=\"Github logo\" src={github}></img></a>\r\n            <a href=\"https://www.facebook.com/YPracticum/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__nav-icon footer__nav-icon_facebook\"><img alt=\"Facebook logo\" src={facebook}></img></a>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","const apiKey = \"0faa4eab3d374a6d99b353e5310a09b0\";\nconst url = \"https://nomoreparties.co/news/v2\";\nconst endpoint = \"/everything\";\nconst pageSize = 100;\n\nconst newsApiEndpoints = {\n  url,\n  endpoint,\n  auth: {\n    Authorization: apiKey,\n  },\n  pageSize\n}\n\nclass NewsApi {\n  constructor({ url, endpoint, auth, pageSize }) {\n    this._url = url;\n    this._endpoint = endpoint;\n    this._auth = auth;\n    this._pageSize = pageSize\n  }\n\n  _checkResponse(res) {\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  }\n\n  search(keyword) {\n    return fetch(`${this._url}${this._endpoint}?q=${keyword}&from=${new Date(Date.now() - 604800000)}&to=${new Date(Date.now)}&pageSize=${pageSize}`, {\n      headers: this._auth\n    })\n      .then((res) => {\n        return this._checkResponse(res)\n      })\n  }\n}\n\nconst newsApi = new NewsApi(newsApiEndpoints);\n\nexport default newsApi;","import React, { useRef } from 'react';\n\nimport newsApi from '../../utils/NewsApi';\nimport api from '../../utils/MainApi';\n\nconst SearchForm = (props) => {\n\n  const searchRef = useRef();\n\n  // check if any of the cards match cards that are already saved\n\n  function searchAndSort(savedCards) {\n    newsApi.search(searchRef.current.value)\n      .then((res) => {\n        // array of articles to be compared then returned after loop\n        let newArticles = []\n        let urlArray = [];\n        // check if there are no saved cards or an error\n        if (savedCards.length === 0 || null) {\n          // if there are no local card, loop articles and assign keyword. Then return\n          res.articles.forEach((article) => {\n            article.keyword = searchRef.current.value;\n            newArticles.push(article);\n          });\n\n          return newArticles;\n\n        } else if (!savedCards) {\n          // check for card retrieval error\n          throw new Error('Saved articles retrieval failed');\n        } else {\n          // loop through saved cards and extract the url\n          savedCards.forEach((card) => {\n            urlArray.push(card.url);\n          });\n\n          // loop through articles, compare, then assign a special property if the article\n          // has already been saved\n          res.articles.forEach((article) => {\n            if (urlArray.includes(article.url)) {\n              article.isSaved = true;\n            };\n            // then assign keyword\n            article.keyword = searchRef.current.value;\n            newArticles.push(article);\n            return\n          })\n        }\n        // finally, return the articles with the new properties\n        return newArticles;\n      })\n      .then((articles) => {\n        if (articles) {\n          props.setVisibleCards(3);\n          props.setCards(articles);\n          return\n        } else {\n          props.toggleIsLoading(false);\n          throw new Error('Unhandled request error')\n        }\n      })\n      .then(() => {\n        // clear loading icon\n        props.toggleIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  // Search click handler\n\n  function newsSearch(e) {\n    e.preventDefault();\n    if (searchRef.current.value.length > 0) {\n      // set loading icon\n      props.toggleIsLoading(true);\n      // elevated scope to avoid crashing when data isn't returned fast enough\n      let savedCards\n\n      // retrieve cards from local storage or api. Save to savedCards variable\n      if (localStorage.getItem('articles')) {\n        savedCards = JSON.parse(localStorage.getItem('articles'));\n        searchAndSort(savedCards);\n      } else {\n        // get local data from server for comparison\n        api.getArticles()\n          .then((res) => {\n            // send to sorting handler\n            searchAndSort(res);\n            return;\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    }\n    return\n  }\n\n  function handleEnterKey(e) {\n    e.preventDefault()\n    if (e.key === 'Enter') {\n      newsSearch(e);\n    }\n    return\n  }\n\n  return (\n    <section className=\"search-container\">\n      <div className=\"search-container__width\">\n        <h2 className=\"search-container__title\">What's going on in the world?</h2>\n        <p className=\"search-container__subtitle\">Find the latest news on any topic and save them in your personal account</p>\n        <form onSubmit={newsSearch} className='search-bar'>\n          <input ref={searchRef} onKeyUp={handleEnterKey} type=\"text\" placeholder=\"Enter topic\" className='search-bar__input' />\n          <button type=\"submit\" className='search-bar__button'>Search</button>\n        </form>\n      </div>\n    </section>\n\n  );\n}\n\nexport default SearchForm;","import React from 'react';\n\nconst About = () => {\n  return (\n    <section className=\"about\">\n      <div className=\"about__width\">\n        <div className=\"about__image\"></div>\n        <div className=\"about__text-container\">\n          <h2 className=\"about__title\">About the author</h2>\n          <p className=\"about__text\">\n            Danny is an electronic music producer, mix engineer, and web developer\n            from Salt Lake City, Utah. While his first love is making dance music,\n            Danny loves to program web apps, especially using front end frameworks\n            like Vue 3 and ReactJS.\n        </p>\n          <p className=\"about__text\">\n            Danny is currently pursuing a career in tech working part-time for\n            Adobe Systems as a security contractor. He's also building his own\n            company with his brother, Matt, that builds web apps that assists\n            people that are trying to pursue full-time careers as freelancers.\n        </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default About;","import React, { useEffect, useState } from 'react';\n\nconst NewsCard = (props) => {\n\n  const [isSaved, toggleIsSaved] = useState(false);\n\n  // Utility functions to help with formatting\n\n  const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  };\n\n  function formatDate() {\n    if (props.isSavedNewsRoute) {\n      return props.date.substr(0, 15);\n    } else {\n      return props.date.split(\"T\")[0];\n    }\n  };\n\n  // Click handlers\n\n  function handleDelete() {\n    props.deleteCard(props._id);\n  };\n\n  function handleArticleSave() {\n    // prevent action if article is already saved\n    if (isSaved) {\n      return\n    } else {\n      // send article up to Main component to be handled\n      props.saveArticle({\n        keyword: props.keyword,\n        title: props.title,\n        text: props.description,\n        date: props.date,\n        source: props.source,\n        link: props.url,\n        image: props.image,\n      })\n\n      toggleIsSaved(true);\n      return;\n    }\n  };\n\n  // Effect to check if article contains an isSaved properties, which is assigned during the api call\n  // This is only relevant when searching for cards on NewsApi, not local.\n\n  useEffect(() => {\n    if (props.isSaved){\n      toggleIsSaved(true);\n    };\n    return\n  }, [props.isSaved, toggleIsSaved]);\n\n  // functions for conditional rendering of components\n\n  function deleteOrSave() {\n    if (props.isSavedNewsRoute && props.isLoggedIn) {\n      return (\n        <button onClick={handleDelete} className=\"news-card__delete-button\">\n          <span className=\"news-card__save-button-label\"><p>Remove from saved</p></span>\n        </button>\n      )\n    } else if (!props.isSavedNewsRoute && props.isLoggedIn) {\n      return (\n        <button onClick={(e) => { e.stopPropagation(); handleArticleSave() }} className={`news-card__save-button ${isSaved ? 'news-card__save-button_active' : ''}`}></button>\n      )\n    } else {\n      return (\n        <button className=\"news-card__save-button\">\n          <span className=\"news-card__save-button-label\"><p>Sign in to save articles</p></span>\n        </button>\n      )\n    }\n  }\n\n  function keywords() {\n    if (props.isSavedNewsRoute) {\n      return (\n        <div className=\"news-card__keyword\">\n          <p>{capitalize(props.keyword)}</p>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <li className=\"news-card\">\n      {deleteOrSave()}\n      <a className=\"news-card__anchor\" href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {keywords()}\n        <div className=\"news-card__image\" style={{\n          backgroundImage: `url(${props.image})`\n        }}></div>\n        <div className=\"news-card__info-container\">\n          <p className=\"news-card__date\">{formatDate()}</p>\n          <h3 className=\"news-card__title\">{props.title}</h3>\n          <p className=\"news-card__snippet\">{props.description}</p>\n          <p className=\"news-card__source\">{props.source}</p>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nexport default NewsCard;","import React from 'react';\n\nconst NothingFound = ({ error }) => {\n  return (\n    <div className=\"nothing-found__container\">\n      <h2 className=\"nothing-found__title\">{error\n      ? \"Sorry, something went wrong during the request. There may be a connection issue or the server may be down. Please try again later\"\n      : \"Nothing Found\"}</h2>\n    </div>\n  );\n}\n\nexport default NothingFound;","import React, { useState } from 'react';\n\nimport NewsCard from '../NewsCard/NewsCard';\nimport NothingFound from '../NothingFound/NothingFound';\n\nconst NewsCardList = (props) => {\n  const [hideButton, toggleButton] = useState(false);\n\n  function incrementVisibleCards() {\n    if (props.visibleCards > 100) {\n      toggleButton(true);\n      return\n    } else {\n      const newVisibleCards = props.visibleCards + 3;\n      props.setVisibleCards(newVisibleCards);\n    }\n\n  }\n\n  function renderCardList() {\n    if (props.cards.length === 0) {\n      return <NothingFound error={false} />\n    } else if (props.cards) {\n      return props.cards.slice(0, props.visibleCards).map((card) => {\n\n        return <NewsCard\n          key={card.url}\n          _id={card._id}\n          keyword={card.keyword}\n          date={card.publishedAt}\n          title={card.title}\n          description={card.description}\n          source={card.source.name}\n          url={card.url}\n          image={card.urlToImage}\n          isSaved={card.isSaved}\n          isSavedNewsRoute={props.isSavedNewsRoute}\n          isLoggedIn={props.isLoggedIn}\n          deleteCard={props.deleteCard}\n          saveArticle={props.saveArticle}\n        />\n      });\n    } else {\n      return <NothingFound error={true} />\n    }\n  }\n\n  return (\n    <section className=\"news-card-list\">\n      <div className=\"news-card-list__width\">\n\n        {!props.isSavedNewsRoute\n          ? <h2 className=\"news-card-list__title\">\n            Search results\n            </h2>\n          : \"\"\n        }\n        <ul className=\"news-card-list__container\">\n          {\n            renderCardList()\n          }\n        </ul>\n\n\n        {!props.isSavedNewsRoute && !hideButton ? <button onClick={incrementVisibleCards} className=\"news-card-list__show-more\">Show more</button> : ''}\n\n      </div>\n    </section>\n  );\n}\n\nexport default NewsCardList;","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"circle-preloader__container\">\r\n      <i className=\"circle-preloader\"></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","import React, { useState } from 'react';\n\nimport SearchForm from '../SearchForm/SearchForm';\nimport About from '../About/About';\nimport NewsCardList from '../NewsCardList/NewsCardList';\nimport Preloader from '../Preloader/Preloader';\nimport NothingFound from '../NothingFound/NothingFound';\n\nimport api from '../../utils/MainApi';\n\nconst Main = (props) => {\n\n  const { isLoggedIn, isLoading, toggleIsLoading } = props;\n\n  const [cards, setCards] = useState([]);\n  const [visibleCards, setVisibleCards] = useState(0);\n\n  function saveArticle({ keyword, title, text, date, source, link, image }) {\n\n    api.addArticle({\n      keyword,\n      title,\n      text,\n      date,\n      source,\n      link,\n      image,\n    })\n      .then(() => {\n        localStorage.removeItem('articles');\n        return\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  function renderCardList() {\n    if (isLoading) {\n      return (\n        <Preloader />\n      )\n    } else if (!isLoading && visibleCards > 0) {\n      if (!cards) {\n        return <NothingFound error={true} />\n      } else if (cards.length === 0) {\n        return (\n          <NothingFound error={false} />\n        )\n      } else if (cards) {\n        return (\n          <NewsCardList\n            isSavedNewsRoute={false}\n            isLoggedIn={isLoggedIn}\n            cards={cards}\n            setCards={setCards}\n            visibleCards={visibleCards}\n            setVisibleCards={setVisibleCards}\n            saveArticle={saveArticle}\n\n          />\n        )\n      }\n    }\n    return\n  }\n\n  return (\n    <div className=\"main\">\n      <SearchForm\n        setCards={setCards}\n        setVisibleCards={setVisibleCards}\n        toggleIsLoading={toggleIsLoading}\n      />\n\n      {renderCardList()}\n\n      <About />\n\n    </div>\n  );\n}\n\nexport default Main;","import React, { useContext } from 'react';\n\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\n\nconst SavedNewsHeader = ({ savedCards, sortedKeywords }) => {\n\n  const currentUser = useContext(CurrentUserContext);\n  // utility function to capitalize strings\n  const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n  function keywordList() {\n    // check array length and return appropriate string\n\n    if (sortedKeywords.length === 1) {\n      return `${capitalize(sortedKeywords[0])}`;\n    } else if (sortedKeywords.length === 2) {\n      return `${capitalize(sortedKeywords[0])} and ${capitalize(sortedKeywords[1])}`;\n    } else if (sortedKeywords.length === 3) {\n      return `${capitalize(sortedKeywords[0])}, ${capitalize(sortedKeywords[1])}, and ${capitalize(sortedKeywords[2])}`;\n    } else {\n      return `${capitalize(sortedKeywords[0])}, ${capitalize(sortedKeywords[1])}, and ${sortedKeywords.length - 2} others`;\n    };\n  }\n\n  return (\n    <section className='saved-news-header'>\n      <div className=\"saved-news-header__width\">\n        <p className=\"saved-news-header__label\">Saved articles</p>\n        <h2 className=\"saved-news-header__title\">\n          {currentUser.name}, you have {savedCards ? savedCards.length : \"no\"} saved articles\n        </h2>\n        {\n          sortedKeywords\n            ? <p className=\"saved-news-header__keyword-text\">\n              By keywords: <span className=\"saved-news-header__keywords\">{keywordList()}</span>\n            </p>\n            : \"\"\n        }\n\n      </div>\n    </section>\n  );\n}\n\nexport default SavedNewsHeader;","import React, { useCallback, useEffect, useState } from 'react';\nimport NewsCardList from '../NewsCardList/NewsCardList';\nimport Preloader from '../Preloader/Preloader';\nimport NothingFound from '../NothingFound/NothingFound';\nimport SavedNewsHeader from '../SavedNewsHeader/SavedNewsHeader';\n\nimport api from '../../utils/MainApi';\n\nconst SavedNews = ({ isLoading, toggleIsLoading, isLoggedIn }) => {\n\n  const [savedCards, setSavedCards] = useState();\n  const [sortedKeywords, setSortedKeywords] = useState([]);\n\n  // Delete button elevated state so cards can be rerendered after delete\n\n  function deleteCard(id) {\n    if (id) {\n      api.deleteArticle(id)\n        .then(() => {\n          localStorage.removeItem('articles');\n          retrieveCards();\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n    }\n\n  }\n\n  // function to sort keywords by number of times that keyword was used\n\n  const returnKeywordRankings = (arr) => {\n    // don't run unless savedCards is set\n    if (arr) {\n      // extract keywords from savedCards and put in new array\n      let keywords = [];\n      arr.forEach((card) => {\n        const lowercase = card.keyword.toLowerCase();\n        keywords.push(lowercase);\n        return;\n      });\n      // sort new array and place in object\n      let result = {};\n      for (let i = 0; i < keywords.length; ++i) {\n        if (!result[keywords[i]])\n          result[keywords[i]] = 0;\n        ++result[keywords[i]];\n      }\n      // make a shallow copy of result that you can delete properties without messing with result.length\n      const keywordsCopy = { ...result }\n\n      // loop through object and delete top result from the shallow copy, then loop again\n\n      let sortedResult = [];\n      for (let i = 0; i < Object.keys(result).length; ++i) {\n        const reducedObj = Object.keys(keywordsCopy).reduce((a, b) => keywordsCopy[a] > keywordsCopy[b] ? a : b);\n        sortedResult.push(reducedObj);\n        delete keywordsCopy[reducedObj];\n      };\n\n      // THIS RETURNS AN ARRAY OF SORTED KEYWORDS, NOT A SORTED OBJECT\n\n      return sortedResult;\n\n    } else {\n      return\n    }\n  };\n\n  // Sort cards by keyword\n\n  function sortCardsByKeyword(refArray, objectToSort) {\n\n    const itemPositions = {};\n    for (const [index, id] of refArray.entries()) {\n      itemPositions[id] = index;\n    }\n\n    objectToSort.sort((a, b) => itemPositions[a.keyword] - itemPositions[b.keyword]);\n\n    return objectToSort;\n\n  }\n\n  // Effect to retrieve cards and set to proper values\n\n  const retrieveCards = useCallback(() => {\n    toggleIsLoading(true);\n    // Check local storage for articles\n    const cards = JSON.parse(localStorage.getItem('articles'));\n    if (cards) {\n        const keywordRankArray = returnKeywordRankings(cards);\n        setSortedKeywords(keywordRankArray);\n        setSavedCards(cards);\n        toggleIsLoading(false);\n    } else {\n      api.getArticles()\n        .then((res) => {\n          // loop cards and set article format to the same as the NewsAPI\n          let newCards = []\n          res.forEach((card) => {\n            const newCard = {\n              _id: card._id,\n              keyword: card.keyword,\n              publishedAt: card.date,\n              title: card.title,\n              description: card.text,\n              source: card.source,\n              url: card.link,\n              urlToImage: card.image,\n            }\n\n            newCards.push(newCard);\n            return\n          });\n          return newCards;\n        })\n        .then((newCards) => {\n          // sort cards by keyword\n          const keywordRankArray = returnKeywordRankings(newCards);\n          setSortedKeywords(keywordRankArray);\n          return sortCardsByKeyword(keywordRankArray, newCards);\n        })\n        .then((sortedCards) => {\n          // set sorted cards into localstorage and onto the DOM\n          localStorage.setItem('articles', JSON.stringify(sortedCards));\n          setSavedCards(sortedCards);\n          toggleIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [toggleIsLoading, setSavedCards, setSortedKeywords])\n\n  // Render cards when they arrive\n\n  function renderCardList() {\n    // check if there are cards\n    // if you don't, it will crash, since savedCards doesn't have length\n    if (!savedCards) {\n      return <NothingFound error={true} />\n    } else {\n      if (isLoading) {\n        return (\n          <Preloader />\n        )\n      } else if (!isLoading) {\n        if (savedCards.length === 0) {\n          return (\n            <NothingFound error={false} />\n          )\n        } else if (savedCards) {\n          return (\n            <NewsCardList\n              isSavedNewsRoute={true}\n              isLoggedIn={isLoggedIn}\n              cards={savedCards}\n              setCards={setSavedCards}\n              visibleCards={savedCards.length}\n              setVisibleCards={null}\n              deleteCard={deleteCard}\n              sortedKeywords={sortedKeywords}\n            />\n          )\n        }\n      }\n      return\n    }\n\n  }\n\n  useEffect(() => {\n    retrieveCards();\n\n  }, [retrieveCards]);\n\n\n  return (\n    <section className=\"saved-news\">\n\n      <SavedNewsHeader\n        savedCards={savedCards}\n        sortedKeywords={sortedKeywords}\n      />\n\n\n      {renderCardList()}\n\n    </section>\n  );\n}\n\nexport default SavedNews;","import React, { useState, useRef } from 'react';\nimport validator from 'validator';\n\nimport api from '../../utils/MainApi';\n\nconst PopupWithForm = (props) => {\n\n  // State constants\n\n  const [errors, setErrors] = useState({});\n  const [signinFailed, toggleSigninFailed] = useState(false);\n  const [badRequest, toggleBadRequest] = useState(false);\n\n  // Ref assignments\n\n  const emailRef = useRef()\n  const passwordRef = useRef();\n  const nameRef = useRef();\n\n  // Submit handlers\n\n  function handleRegisterSubmit(e) {\n    e.preventDefault();\n\n    api.register(\n      emailRef.current.value,\n      passwordRef.current.value,\n      nameRef.current.value)\n      .then((res) => {\n        if (res) {\n          // Toggle states for register success popup\n          props.toggleRegisterSuccess(true);\n          props.toggleFormPopup(false);\n          props.toggleRegisterSuccessPopup(true);\n        } else {\n          // Toggle states for register failure popup\n          props.toggleRegisterSuccess(false);\n          props.toggleFormPopup(false);\n          props.toggleRegisterSuccessPopup(true);\n        }\n      })\n      .catch((err) => {\n        // Toggle states for register failure popup\n\n        props.toggleRegisterSuccess(false);\n        props.toggleFormPopup(false);\n        props.toggleRegisterSuccessPopup(true);\n\n        console.log(err);\n      })\n  }\n\n  function handleSigninSubmit(e) {\n    e.preventDefault()\n    api.signin(emailRef.current.value, passwordRef.current.value)\n      .then((res) => {\n        if (res) {\n          api.getUserInfo()\n            .then((res) => {\n              props.setCurrentUser(res);\n            })\n            .then(() => {\n              emailRef.current.value = \"\";\n              passwordRef.current.value = \"\";\n              toggleSigninFailed(false);\n              props.toggleFormPopup(false);\n              props.toggleLoggedIn(true);\n              closePopup();\n            })\n        }\n        else {\n          toggleSigninFailed(true);\n          toggleBadRequest(true);\n        }\n      })\n      .catch((err) => {\n        if (err === \"Error: 400\") {\n          toggleSigninFailed(true);\n          toggleBadRequest(true);\n        } else {\n          toggleSigninFailed(true);\n          console.log(err);\n        }\n      })\n  }\n\n  // Input validation\n\n  function validateInputs(email, password, username = null) {\n\n    const errors = {};\n\n    if (!email || !validator.isEmail(email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    if (!password) {\n      errors.password = \"Password is a required field\";\n    } else if (!validator.isStrongPassword(password, { minSymbols: 0 })) {\n      errors.password = \"Password must be at least 8 characters and contain a number and a capital letter.\";\n    }\n\n    if (username === null) {\n\n    } else if (!username) {\n      errors.username = \"Username is a required field.\";\n    } else if (username.length < 5) {\n      errors.username = \"Username must be at least 6 characters\";\n    }\n\n    return errors;\n  }\n\n  function registerFormOnChange() {\n    const validatedInputs = validateInputs(emailRef.current.value, passwordRef.current.value, nameRef.current.value)\n    if (Object.keys(validatedInputs).length === 0) {\n      setErrors(false);\n      return\n    }\n    setErrors(validatedInputs);\n    return\n  }\n\n  function signinFormOnChange() {\n    const validatedInputs = validateInputs(emailRef.current.value, passwordRef.current.value)\n    if (Object.keys(validatedInputs).length === 0) {\n      setErrors(false);\n      return\n    }\n\n    setErrors(validatedInputs);\n    return\n  }\n\n  // Misc utility functions (toggling popups, conditional rendering, etc)\n\n  function closePopup() {\n    props.togglePopup(false);\n  }\n\n  function toggleRegisterPopup() {\n    toggleBadRequest(false);\n    props.toggleIsRegisterPopup(!props.isRegisterPopup);\n  }\n\n  // Conditional rendering of Sign up or Sign in form\n\n  function isRegister() {\n    if (props.isRegisterPopup) {\n      return (\n        <>\n          <h2 className=\"popup__title\">Sign up</h2>\n          <form onChange={() => registerFormOnChange()} onSubmit={handleRegisterSubmit} className=\"popup__form popup__form_register form\">\n            <label className=\"form__label\" htmlFor=\"register-email\">Email</label>\n            <input className=\"form__input\" type=\"email\" id=\"register-email\" ref={emailRef} placeholder=\"Email\" required></input>\n            {errors.email ? <span className=\"form__error\">{errors.email}</span> : ''}\n\n            <label className=\"form__label\" htmlFor=\"register-password\">Password</label>\n            <input className=\"form__input\" type=\"password\" id=\"register-password\" ref={passwordRef} placeholder=\"Password\" required></input>\n            {errors.password ? <span className=\"form__error\">{errors.password}</span> : ''}\n\n            <label className=\"form__label\" htmlFor=\"register-username\">Username</label>\n            <input className=\"form__input\" type=\"text\" id=\"register-username\" ref={nameRef} placeholder=\"Username\" required></input>\n            {errors.username ? <span className=\"form__error\">{errors.username}</span> : ''}\n\n            <button type=\"submit\" className={`popup__submit ${!errors ? 'popup__submit_active' : ''}`}>{props.isRegisterPopup ? \"Sign up\" : \"Sign in\"}</button>\n          </form>\n\n          <p className=\"popup__swap-form-text\">or <button onClick={toggleRegisterPopup} className=\"popup__swap-form-button\">Sign in</button></p>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <h2 className=\"popup__title\">Sign in</h2>\n          <form onChange={signinFormOnChange} onSubmit={handleSigninSubmit} className=\"popup__form popup__form_signin form\">\n            <label className=\"form__label\" htmlFor=\"register-email\">Email</label>\n            <input className=\"form__input\" type=\"email\" id=\"register-email\" ref={emailRef} placeholder=\"Email\" required></input>\n            {errors.email ? <span className=\"form__error\">{errors.email}</span> : ''}\n\n            <label className=\"form__label\" htmlFor=\"register-password\">Password</label>\n            <input className=\"form__input\" type=\"password\" id=\"register-password\" ref={passwordRef} placeholder=\"Password\" required></input>\n            {errors.password ? <span className=\"form__error\">{errors.password}</span> : ''}\n\n            {signinFailed ? <span className=\"form__error\">{badRequest ? 'Invalid email or password' : 'Something went wrong, please try again'}</span> : ''}\n\n            <button type=\"submit\" className={`popup__submit ${!errors ? 'popup__submit_active' : ''}`}>{props.isRegisterPopup ? \"Sign up\" : \"Sign in\"}</button>\n          </form>\n\n\n          <p className=\"popup__swap-form-text\">or <button onClick={toggleRegisterPopup} className=\"popup__swap-form-button\">Sign up</button></p>\n        </>\n      )\n    }\n  }\n\n  // Actual component, lol\n\n  return (\n    <>\n      {props.isFormPopupOpen ? isRegister() : \"\"}\n    </>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\r\n\r\nconst Popup = (props) => {\r\n\r\n  function closePopup() {\r\n    props.togglePopup(false)\r\n    props.toggleFormPopup(false);\r\n  }\r\n  return (\r\n    <section className={`modal ${props.isPopupOpen ? 'modal_visible' : ''}`}>\r\n    <div className={`popup ${props.isPopupOpen ? 'popup_visible' : ''}`}>\r\n      <div className=\"form-width\">\r\n        <i className=\"popup__exit\" onClick={closePopup}></i>\r\n\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  </section>\r\n   );\r\n}\r\n\r\nexport default Popup;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n        () => props.isLoggedIn ? <Component { ...props } /> : <Redirect to='/'/>\n      }\n    </Route>\n   );\n}\n\nexport default ProtectedRoute;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext'\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Main from '../Main/Main';\nimport SavedNews from '../SavedNews/SavedNews';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport Popup from '../Popup/Popup';\n\nimport api from '../../utils/MainApi';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\n\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState({})\n  const [isLoggedIn, toggleLoggedIn] = useState(false);\n  const [isRegisterPopup, toggleIsRegisterPopup] = useState(false);\n  const [isPopupOpen, togglePopup] = useState(false);\n  const [isFormPopupOpen, toggleFormPopup] = useState(false);\n  const [isRegisterSuccessPopupOpen, toggleRegisterSuccessPopup] = useState(false);\n  const [isRegisterSuccess, toggleRegisterSuccess] = useState(false);\n  const [isLoading, toggleIsLoading] = useState(false);\n\n\n  function registrationSuccessToSignin() {\n    toggleIsRegisterPopup(false);\n    toggleRegisterSuccessPopup(false);\n    toggleFormPopup(true);\n  }\n  function registrationFailRedirect() {\n    toggleIsRegisterPopup(true);\n    toggleRegisterSuccessPopup(false);\n    toggleFormPopup(true);\n  }\n\n  useEffect(() => {\n\n    api.getUserInfo()\n      .then((res) => {\n        if (res) {\n          setCurrentUser(res)\n          toggleLoggedIn(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return\n      })\n  }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='app'>\n        <div className='page'>\n          <Router>\n            <Switch>\n              <Route exact path='/'>\n                <Header\n                  isLoggedIn={isLoggedIn}\n                  toggleLoggedIn={toggleLoggedIn}\n                  isPopupOpen={isPopupOpen}\n                  isFormPopupOpen={isFormPopupOpen}\n                  toggleIsRegisterPopup={toggleIsRegisterPopup}\n                  togglePopup={togglePopup}\n                  toggleFormPopup={toggleFormPopup}\n                  isSavedNewsRoute={false}\n                />\n\n                <Main\n                  isLoggedIn={isLoggedIn}\n                  isLoading={isLoading}\n                  toggleIsLoading={toggleIsLoading}\n                />\n\n                <Footer />\n              </Route>\n\n              <Route exact path=\"/saved-news\">\n                <Header\n                  isLoggedIn={isLoggedIn}\n                  isSavedNewsRoute={true}\n                  isPopupOpen={isPopupOpen}\n                  isFormPopupOpen={isFormPopupOpen}\n                  toggleIsRegisterPopup={toggleIsRegisterPopup}\n                  toggleFormPopup={toggleFormPopup}\n                  togglePopup={togglePopup}\n                  toggleLoggedIn={toggleLoggedIn}\n                />\n\n                <ProtectedRoute\n                  component={SavedNews}\n                  isLoggedIn={isLoggedIn}\n                  isLoading={isLoading}\n                  toggleIsLoading={toggleIsLoading}\n                />\n\n                <Footer />\n\n              </Route>\n            </Switch>\n          </Router>\n          {isFormPopupOpen\n            ? <Popup\n              togglePopup={togglePopup}\n              toggleFormPopup={toggleFormPopup}\n              isPopupOpen={isPopupOpen}\n            >\n              <PopupWithForm\n                isRegisterPopup={isRegisterPopup}\n                toggleIsRegisterPopup={toggleIsRegisterPopup}\n                isFormPopupOpen={isFormPopupOpen}\n                toggleFormPopup={toggleFormPopup}\n                isRegisterSuccessPopupOpen={isRegisterSuccessPopupOpen}\n                toggleRegisterSuccessPopup={toggleRegisterSuccessPopup}\n                togglePopup={togglePopup}\n                toggleLoggedIn={toggleLoggedIn}\n                isRegisterSuccess={isRegisterSuccess}\n                toggleRegisterSuccess={toggleRegisterSuccess}\n                setCurrentUser={setCurrentUser}\n              />\n            </Popup>\n            : \"\"}\n\n          {isRegisterSuccessPopupOpen\n            ? <Popup\n              isPopupOpen={isPopupOpen}\n              togglePopup={togglePopup}\n              toggleFormPopup={toggleFormPopup}\n            >\n              {isRegisterSuccess\n                ?\n                <>\n                  <h2 className=\"popup__title\">Registration completed successfully!</h2>\n                  <button className=\"popup__swap-form-text popup__swap-form-button\" onClick={registrationSuccessToSignin}>Sign in</button>\n                </>\n                :\n                <>\n                  <h2 className=\"popup__title\">Oops! Something went wrong</h2>\n                  <button className=\"popup__swap-form-text popup__swap-form-button\" onClick={registrationFailRedirect}>Try again</button>\n                </>\n              }\n\n            </Popup>\n            : \"\"}\n\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/App/App.js';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}